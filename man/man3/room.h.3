.TH "include/room.h" 3 "Wed Feb 9 2022" "OPIchat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/room.h
.SH SYNOPSIS
.br
.PP
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include 'client\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBroom\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBroom_errors\fP { \fBROOM_ERROR_NONE\fP, \fBROOM_ERROR_BAD_NAME\fP, \fBROOM_ERROR_DUPPLICATE_NAME\fP, \fBROOM_ERROR_NOT_FOUND\fP, \fBROOM_ERROR_UNAUTHORIZED\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBroom\fP * \fBadd_room\fP (struct \fBroom\fP *\fBroom\fP, const char *room_name, int owner_socket)"
.br
.RI "Add a new room room to the linked list room\&. "
.ti -1c
.RI "struct \fBroom\fP * \fBremove_room\fP (struct \fBroom\fP *\fBroom\fP, const char *room_name, int demander_socket)"
.br
.RI "Remove the room room from the linked list room\&. "
.ti -1c
.RI "struct \fBroom\fP * \fBfind_room\fP (struct \fBroom\fP *\fBroom\fP, const char *room_name)"
.br
.RI "Find the room element where the socket is equal to room sock\&. "
.ti -1c
.RI "struct \fBsend_pool\fP * \fBreturn_forged_error_message\fP (char *command, char *payload, int send_socket)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fBroom\fP * \fBrooms\fP"
.br
.RI "Contain all the information about all rooms (linked list) "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBroom_errors\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIROOM_ERROR_NONE \fP\fP
.TP
\fB\fIROOM_ERROR_BAD_NAME \fP\fP
.TP
\fB\fIROOM_ERROR_DUPPLICATE_NAME \fP\fP
.TP
\fB\fIROOM_ERROR_NOT_FOUND \fP\fP
.TP
\fB\fIROOM_ERROR_UNAUTHORIZED \fP\fP
.PP
Definition at line \fB15\fP of file \fBroom\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "struct \fBroom\fP * add_room (struct \fBroom\fP * room, const char * room_name, int owner_socket)"

.PP
Add a new room room to the linked list room\&. 
.PP
\fBParameters\fP
.RS 4
\fIroom\fP The room linked list with all the rooms 
.br
\fIroom_name\fP The name of the room to add must be alphanumeric, else errno is set to ROOM_ERROR_BAD_NAME must be unique (not already in linked list), else errno is set to ROOM_ERROR_DUPPLICATE_NAME 
.br
\fIowner_socket\fP The socket FD of the room owner
.RE
.PP
\fBReturns\fP
.RS 4
The room linked list with the element added 
.RE
.PP

.PP
Definition at line \fB35\fP of file \fBroom\&.c\fP\&.
.SS "struct \fBroom\fP * find_room (struct \fBroom\fP * room, const char * room_name)"

.PP
Find the room element where the socket is equal to room sock\&. 
.PP
\fBParameters\fP
.RS 4
\fIroom\fP The room linked list with all the rooms 
.br
\fIroom_name\fP The room name to find
.RE
.PP
\fBReturns\fP
.RS 4
The room element of the specific room, if not found errno is set to ROOM_ERROR_NOT_FOUND 
.RE
.PP

.PP
Definition at line \fB112\fP of file \fBroom\&.c\fP\&.
.SS "struct \fBroom\fP * remove_room (struct \fBroom\fP * room, const char * room_name, int demander_socket)"

.PP
Remove the room room from the linked list room\&. 
.PP
\fBParameters\fP
.RS 4
\fIroom\fP The room linked list with all the rooms 
.br
\fIroom_name\fP The room name to remove, must be included in the linked list else errno is set to ROOM_ERROR_NOT_FOUND 
.br
\fIdemander_socket\fP The socket FD of the client who wants to remove the room, must be the owner of the room else errno is set to ROOM_ERROR_UNAUTHORIZED
.RE
.PP
\fBReturns\fP
.RS 4
The room linked list with the element removed 
.RE
.PP

.PP
Definition at line \fB78\fP of file \fBroom\&.c\fP\&.
.SS "struct \fBsend_pool\fP * return_forged_error_message (char * command, char * payload, int send_socket)"

.PP
Definition at line \fB19\fP of file \fBroom\&.c\fP\&.
.SH "Variable Documentation"
.PP 
.SS "struct \fBroom\fP* rooms"

.PP
Contain all the information about all rooms (linked list) 
.PP
Definition at line \fB13\fP of file \fBroom\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPIchat from the source code\&.

.TH "/home/runner/work/OPIChat/OPIChat/include/safe_io.h" 3 "Wed Feb 9 2022" "OPIchat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/OPIChat/OPIChat/include/safe_io.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <sys/socket\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include 'xalloc\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEFAULT_BUFFER_SIZE\fP   2048"
.br
.ti -1c
.RI "#define \fBRECV_TIMEOUT\fP   5"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsafe_send\fP (int sockfd, const void *buf, size_t count, int flags)"
.br
.RI "Send a message to a client safely\&. "
.ti -1c
.RI "int \fBsafe_write\fP (int fd, const void *buf, size_t count)"
.br
.RI "Write a message to a file descriptor safely\&. "
.ti -1c
.RI "struct \fBmessage\fP * \fBsafe_recv\fP (int sockfd, int flags, bool mustTimeout)"
.br
.RI "Receive a message from a client safely\&. "
.ti -1c
.RI "ssize_t \fBsafe_read\fP (int fd, void **buf)"
.br
.RI "Read a message from a file descriptor safely\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEFAULT_BUFFER_SIZE   2048"

.PP
Definition at line 4 of file safe_io\&.h\&.
.SS "#define RECV_TIMEOUT   5"

.PP
Definition at line 5 of file safe_io\&.h\&.
.SH "Function Documentation"
.PP 
.SS "ssize_t safe_read (int fd, void ** buf)"

.PP
Read a message from a file descriptor safely\&. 
.PP
\fBWarning\fP
.RS 4
MUST NOT BE USED FOR SOCKETS\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIfd\fP The file descriptor of the client\&. 
.br
\fIbuf\fP The reference to the buffer where the message will be stored\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The number of bytes read, -1 if an error occured\&. 
.RE
.PP

.PP
Definition at line 57 of file safe_io\&.c\&.
.SS "struct \fBmessage\fP* safe_recv (int sockfd, int flags, bool mustTimeout)"

.PP
Receive a message from a client safely\&. 
.PP
\fBParameters\fP
.RS 4
\fIsockfd\fP The file descriptor of the client\&. 
.br
\fIflags\fP the recv() flags\&. 
.br
\fImustTimeout\fP If true, the function will exit after RECV_TIMEOUT seconds, otherwise it will wait for the message to be received forever\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The message received, NULL if an error occured\&. 
.RE
.PP

.PP
Definition at line 127 of file safe_io\&.c\&.
.SS "int safe_send (int sockfd, const void * buf, size_t count, int flags)"

.PP
Send a message to a client safely\&. 
.PP
\fBParameters\fP
.RS 4
\fIsockfd\fP The file descriptor of the client\&. 
.br
\fIbuf\fP The buffer containing the message\&. 
.br
\fIcount\fP The number of bytes to send\&. 
.br
\fIflags\fP the send() flags\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if the message has been sent, -1 otherwise\&. 
.RE
.PP

.PP
Definition at line 22 of file safe_io\&.c\&.
.SS "int safe_write (int fd, const void * buf, size_t count)"

.PP
Write a message to a file descriptor safely\&. 
.PP
\fBParameters\fP
.RS 4
\fIfd\fP The file descriptor of the client\&. 
.br
\fIbuf\fP The buffer containing the message\&. 
.br
\fIcount\fP The number of bytes to write\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 if the message has been sent, -1 otherwise\&. 
.RE
.PP

.PP
Definition at line 40 of file safe_io\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPIchat from the source code\&.

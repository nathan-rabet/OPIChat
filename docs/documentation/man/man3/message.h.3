.TH "/home/runner/work/OPIChat/OPIChat/include/message.h" 3 "Wed Feb 9 2022" "OPIchat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/runner/work/OPIChat/OPIChat/include/message.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBmessage\fP"
.br
.RI "Structure to store the parsed message\&. "
.ti -1c
.RI "struct \fBcommand_parameter\fP"
.br
.RI "Structure to store a command parameter\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmessage_status_code\fP { \fBREQUEST_MESSAGE_CODE\fP = 0, \fBRESPONSE_MESSAGE_CODE\fP = 1, \fBNOTIFICATION_MESSAGE_CODE\fP = 2, \fBERROR_MESSAGE_CODE\fP = 3 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBmessage\fP * \fBinit_message\fP (uint8_t status_code)"
.br
.RI "Initializes a struct message with the param status code affected\&. "
.ti -1c
.RI "struct \fBmessage\fP * \fBparse_message\fP (const char *request_string)"
.br
.RI "Take a message as a string and parse it into a message struct\&. "
.ti -1c
.RI "void \fBfree_message\fP (struct \fBmessage\fP *\fBmessage\fP)"
.br
.RI "Free the memory allocated by a struct message\&. "
.ti -1c
.RI "void \fBfree_partial_message\fP (struct \fBmessage\fP *\fBmessage\fP)"
.br
.RI "Like \fCfree_message\fP, but disalocate a non-valid struct message\&. "
.ti -1c
.RI "int \fBget_message_next_parameter_kv\fP (char *params_start, char **key, char **value)"
.br
.RI "Get the next key value object\&. "
.ti -1c
.RI "char * \fBcompose_message\fP (const struct \fBmessage\fP *\fBmessage\fP)"
.br
.RI "Takes a message struct and serializes it to a string\&. "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmessage_status_code\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIREQUEST_MESSAGE_CODE \fP\fP
.TP
\fB\fIRESPONSE_MESSAGE_CODE \fP\fP
.TP
\fB\fINOTIFICATION_MESSAGE_CODE \fP\fP
.TP
\fB\fIERROR_MESSAGE_CODE \fP\fP
.PP
Definition at line 6 of file message\&.h\&.
.SH "Function Documentation"
.PP 
.SS "char* compose_message (const struct \fBmessage\fP * message)"

.PP
Takes a message struct and serializes it to a string\&. 
.PP
\fBParameters\fP
.RS 4
\fImessage\fP The message as a message struct
.RE
.PP
\fBReturns\fP
.RS 4
char pointer 
.RE
.PP

.PP
Definition at line 41 of file message_serializer\&.c\&.
.SS "void free_message (struct \fBmessage\fP * message)"

.PP
Free the memory allocated by a struct message\&. 
.PP
\fBWarning\fP
.RS 4
MUST NOT be used on incomplete struct message
.RE
.PP
\fBParameters\fP
.RS 4
\fImessage\fP The struct message to free 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 5 of file message_free\&.c\&.
.SS "void free_partial_message (struct \fBmessage\fP * message)"

.PP
Like \fCfree_message\fP, but disalocate a non-valid struct message\&. 
.PP
\fBNote\fP
.RS 4
This function is less efficient than \fCfree_message\fP
.RE
.PP
\fBParameters\fP
.RS 4
\fImessage\fP The struct message to free 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 18 of file message_free\&.c\&.
.SS "int get_message_next_parameter_kv (char * params_start, char ** key, char ** value)"

.PP
Get the next key value object\&. 
.PP
\fBWarning\fP
.RS 4
This function modifies the input string
.RE
.PP
\fBParameters\fP
.RS 4
\fIparams_start\fP The start of the parameters 
.br
\fIkey\fP The key of the object, NULL if no key 
.br
\fIvalue\fP The value of the object, NULL if no value 
.RE
.PP
\fBReturns\fP
.RS 4
offset to the next object, 0 if no more object 
.RE
.PP

.PP
Definition at line 7 of file message_command_parameters\&.c\&.
.SS "struct \fBmessage\fP* init_message (uint8_t status_code)"

.PP
Initializes a struct message with the param status code affected\&. 
.PP
\fBParameters\fP
.RS 4
\fIstatus_code\fP 
.RE
.PP
\fBReturns\fP
.RS 4
struct message* 
.RE
.PP

.PP
Definition at line 4 of file message_init\&.c\&.
.SS "struct \fBmessage\fP* parse_message (const char * request_string)"

.PP
Take a message as a string and parse it into a message struct\&. 
.PP
\fBParameters\fP
.RS 4
\fIrequest_string\fP The message as a string 
.RE
.PP
\fBReturns\fP
.RS 4
struct message, NULL if error or invalid message 
.RE
.PP

.PP
Definition at line 8 of file message_parser\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPIchat from the source code\&.
